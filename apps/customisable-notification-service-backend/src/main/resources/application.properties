spring.profiles.active=dev

## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
# We only want to validate the Flyway migrations but not let Hibernate set the schema
spring.jpa.hibernate.ddl-auto = validate
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Colored console logging
spring.output.ansi.enabled = ALWAYS
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

## Flyway
spring.flyway.locations=classpath:/db/migration

## QuartzProperties
spring.quartz.job-store-type = jdbc
spring.quartz.jdbc.initialize-schema = never
spring.quartz.properties.org.quartz.threadPool.threadCount = 3
spring.quartz.wait-for-jobs-to-complete-on-shutdown = true
spring.quartz.auto-startup = true
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate

# Thymeleaf
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

## Our own properties

# When to check for and import new vehicle state data
de.unia.se.teamcq.scheduling.data-import-cron=0 0/1 * * * ?
# When to check for and process new imported vehicle state data
de.unia.se.teamcq.scheduling.data-processing-cron=0 0/1 * * * ?

# Notification settings
de.unia.se.teamcq.disable-notifications=true

# Authentication settings
de.unia.se.teamcq.bmw-authentication.username=admin
de.unia.se.teamcq.bmw-authentication.password=fd123!

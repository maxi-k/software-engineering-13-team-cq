package de.unia.se.teamcq.ruleevaluation.dto

import de.unia.se.teamcq.ruleevaluation.model.ComparisonType
import java.io.Serializable

// Constructor with (null)-default values for everything necessary for MapStruct
class RuleConditionPredicateDto(

    conditionId: Long? = null,

    var providerName: String? = null,

    var fieldName: String? = null,

    var comparisonType: ComparisonType? = null,

    var comparisonValue: String? = null

) : Serializable, RuleConditionDto(conditionId) {

    // Autogenerated
    override fun hashCode(): Int {
        var result = super.hashCode()
        result = 31 * result + (providerName?.hashCode() ?: 0)
        result = 31 * result + (fieldName?.hashCode() ?: 0)
        result = 31 * result + (comparisonType?.hashCode() ?: 0)
        result = 31 * result + (comparisonValue?.hashCode() ?: 0)
        return result
    }

    // Autogenerated
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false
        if (!super.equals(other)) return false

        other as RuleConditionPredicateDto

        if (providerName != other.providerName) return false
        if (fieldName != other.fieldName) return false
        if (comparisonType != other.comparisonType) return false
        if (comparisonValue != other.comparisonValue) return false

        return true
    }
}

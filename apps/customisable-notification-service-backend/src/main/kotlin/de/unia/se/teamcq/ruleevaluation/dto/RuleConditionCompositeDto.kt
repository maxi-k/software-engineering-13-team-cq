package de.unia.se.teamcq.ruleevaluation.dto

import de.unia.se.teamcq.ruleevaluation.model.LogicalConnectiveType
import java.io.Serializable

// Constructor with (null)-default values for everything necessary for MapStruct
class RuleConditionCompositeDto(

    conditionId: Long? = null,

    var logicalConnective: LogicalConnectiveType? = null,

    var subConditions: List<RuleConditionDto> = mutableListOf<RuleConditionDto>()

) : RuleConditionDto(conditionId), Serializable {

    // Autogenerated
    override fun hashCode(): Int {
        var result = super.hashCode()
        result = 31 * result + (logicalConnective?.hashCode() ?: 0)
        result = 31 * result + subConditions.hashCode()
        return result
    }

    // Autogenerated
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false
        if (!super.equals(other)) return false

        other as RuleConditionCompositeDto

        if (logicalConnective != other.logicalConnective) return false
        if (subConditions != other.subConditions) return false

        return true
    }
}

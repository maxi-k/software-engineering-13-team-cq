server {
    listen 8081;
    server_name  localhost;
    # this is the internal Docker DNS
    resolver 127.0.0.11;

    root   /usr/share/nginx/html;
    index index.html;

    location /apidoc {
        alias            /usr/share/nginx/html/;

        if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          #
          # Custom headers and headers various browsers *should* be OK with but aren't
          #
          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
          #
          # Tell client that this pre-flight info is valid for 20 days
          #
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          add_header 'Content-Length' 0;
          return 204;
        }
        if ($request_method = 'POST') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }
        if ($request_method = 'GET') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }
    }

    location /apidoc/fleetdata/ {
        set $upstream fleetdata:4042;
        rewrite    /apidoc/[^/]+/([^/]+) /apidoc/$1 break;
        proxy_pass   http://$upstream;
    }

    location /apidoc/cns/ {
         set $upstream customisable-notification-system:8080;
         rewrite    /apidoc/[^/]+/([^/]+) /apidoc/$1 break;
         proxy_pass   http://$upstream;
    }

	location /oauth/token {
         set $upstream fleetdata:4042;
         proxy_pass   http://$upstream;
    }
	location /api/ {
	     set $upstream router:8080;
         proxy_pass   http://$upstream;
	}
	

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # Enabling compression to increase I/O
    gzip on;
    gzip_vary on;
    gzip_min_length 20;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";
    gunzip on;
}
